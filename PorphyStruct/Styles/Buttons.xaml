<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:PorphyStruct.Styles"
                    xmlns:sys="clr-namespace:System;assembly=System.Runtime"
                    xmlns:wpf="http://materialdesigninxaml.net/winfx/xaml/themes">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.ToolBar.xaml" />
    </ResourceDictionary.MergedDictionaries>
    
    <Style x:Key="ToolbarButton" TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Static ToolBar.ButtonStyleKey}}">
        <Setter Property="Foreground" Value="#ffffff" />
        <Setter Property="FontWeight" Value="Light" />
        <Setter Property="Margin" Value="5 0 0 0" />
        <Setter Property="wpf:RippleAssist.Feedback" Value="{DynamicResource MaterialDesignFlatButtonRipple}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="Transparent" x:Name="border" CornerRadius="2">
                        <wpf:Ripple Content="{TemplateBinding Content}"  ContentTemplate="{TemplateBinding ContentTemplate}" Focusable="False"
                                Feedback="{TemplateBinding Foreground}"
                                HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                Padding="{TemplateBinding Padding}" 
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" Value=".56"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource MaterialDesignFlatButtonClick}"/>
                            <Setter Property="Background" TargetName="border" Value="{DynamicResource MaterialDesignFlatButtonClick}"/>
                        </Trigger>
                        <Trigger Property="Tag">
                            <Trigger.Value>
                                <sys:Boolean>True</sys:Boolean>
                            </Trigger.Value>
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource MaterialDesignFlatButtonClick}"/>
                            <Setter Property="Background" TargetName="border" Value="{DynamicResource MaterialDesignFlatButtonClick}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="Tag">
                                    <Condition.Value>
                                        <sys:Boolean>True</sys:Boolean>
                                    </Condition.Value>
                                </Condition>
                            </MultiTrigger.Conditions>
                            <Setter Property="BorderBrush" TargetName="border" Value="#FFF"/>
                            <Setter Property="Background" TargetName="border" Value="#FFF"/>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource TitleBackgroundBrush}" />
            </Trigger>
            <Trigger Property="Tag">
                <Trigger.Value>
                    <sys:Boolean>True</sys:Boolean>
                </Trigger.Value>
                <Setter Property="Foreground" Value="{DynamicResource SecondaryColorHue}" />
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>