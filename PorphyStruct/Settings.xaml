<Window x:Class="PorphyStruct.Settings"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:PorphyStruct"
        xmlns:properties="clr-namespace:PorphyStruct.Core.Properties;assembly=PorphyStruct.Core"
        mc:Ignorable="d"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        TextElement.Foreground="{DynamicResource MaterialDesignBody}"
        TextElement.FontSize="13"
        FontFamily="Segoe UI"
        TextOptions.TextFormattingMode="Ideal"
        TextOptions.TextRenderingMode="Auto"
        Style="{DynamicResource DefaultWindowStyle}"
        Title="Settings" Height="650" Width="1000" ResizeMode="NoResize" Closing="Window_Closing">
    <Window.Resources>
        <SolidColorBrush x:Key="WindowBackgroundBrush" Color="#f8263238" />
    </Window.Resources>
    <Grid>
        <TabControl TabStripPlacement="Left" Padding="10">
            <TabControl.Style>
                <Style TargetType="TabControl">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type TabControl}">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="auto"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid Grid.Column="0">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="37"/>
                                            <RowDefinition Height="*"/>
                                        </Grid.RowDefinitions>
                                        <Grid.Effect>
                                            <BlurEffect Radius="0.5"/>
                                        </Grid.Effect>
                                        <TabPanel IsItemsHost="True" DockPanel.Dock="Left" x:Name="PART_Host" Grid.Row="1">
                                            <TabPanel.Style>
                                                <Style TargetType="{x:Type TabPanel}">
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=settingsCollapsed, Mode=OneTime}" Value="False">
                                                            <Setter Property="Width" Value="40"/>
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=settingsCollapsed, Mode=OneTime}" Value="True">
                                                            <Setter Property="Width" Value="250"/>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </TabPanel.Style>
                                        </TabPanel>
                                        <ToggleButton Width="40" Height="35" Padding="0" HorizontalAlignment="Left" BorderThickness="0" IsChecked="{Binding Source={x:Static properties:Settings.Default}, Path=settingsCollapsed, Mode=TwoWay}" x:Name="XToggle">
                                            <materialDesign:PackIcon Kind="HamburgerMenu" Foreground="#ccc" />
                                            <ToggleButton.Triggers>
                                                <EventTrigger RoutedEvent="ToggleButton.Unchecked">
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <DoubleAnimation From="250" To="40" Duration="0:0:.2" Storyboard.TargetProperty="Width" Storyboard.TargetName="PART_Host"/>
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </EventTrigger>
                                                <EventTrigger RoutedEvent="ToggleButton.Checked">
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <DoubleAnimation From="40" To="250" Duration="0:0:.2" Storyboard.TargetProperty="Width" Storyboard.TargetName="PART_Host"/>
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </EventTrigger>
                                            </ToggleButton.Triggers>
                                            <ToggleButton.Style>
                                                <Style TargetType="{x:Type ToggleButton}">
                                                    <Setter Property="Template">
                                                        <Setter.Value>
                                                            <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                                <Border Background="Transparent" x:Name="PART_Border" HorizontalAlignment="Stretch">
                                                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                                                                </Border>
                                                                <ControlTemplate.Triggers>
                                                                    <Trigger Property="IsChecked" Value="True">
                                                                        <Setter TargetName="PART_Border" Property="Background" Value="{DynamicResource SecondaryHueMidBrush}"/>
                                                                    </Trigger>
                                                                    <Trigger Property="IsMouseOver" Value="True">
                                                                        <Setter TargetName="PART_Border" Property="BorderBrush" Value="{StaticResource TitleBackgroundBrushInactive}"/>
                                                                        <Setter TargetName="PART_Border" Property="BorderThickness" Value="1"/>
                                                                    </Trigger>
                                                                </ControlTemplate.Triggers>
                                                            </ControlTemplate>
                                                        </Setter.Value>
                                                    </Setter>
                                                </Style>
                                            </ToggleButton.Style>
                                        </ToggleButton>
                                    </Grid>
                                    <ContentPresenter Name="PART_SelectedContentHost" ContentSource="SelectedContent" Grid.Column="1"/>
                                </Grid>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </TabControl.Style>
            <TabControl.ItemContainerStyle>
                <Style TargetType="{x:Type TabItem}">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type TabItem}">
                                <TextBlock Padding="4 10 10 10" x:Name="headBorder" Width="250">
                                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Stretch">
                                        <Rectangle x:Name="Trian" Width="2" Stroke="{DynamicResource SecondaryHueMidBrush}" Fill="{DynamicResource SecondaryHueMidBrush}" Margin="0,0,3,0" Visibility="Hidden"/>
                                        <ContentPresenter ContentSource="Header" x:Name="Content" RecognizesAccessKey="True"  HorizontalAlignment="Stretch"/>
                                    </StackPanel>
                                </TextBlock>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsSelected" Value="True">
                                        <Setter TargetName="Trian" Property="Visibility" Value="Visible"/>
                                    </Trigger>
                                    <Trigger SourceName="headBorder" Property="IsMouseOver" Value="True">
                                        <Setter TargetName="headBorder" Property="Background" Value="{StaticResource TitleBackgroundBrushInactive}" />
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </TabControl.ItemContainerStyle>
            <TabItem IsSelected="True">
                <TabItem.Header>
                    <StackPanel Orientation="Horizontal">
                        <materialDesign:PackIcon Kind="ChartScatterPlotHexbin" Width="24" Height="24" Margin="0 0 7 0" Foreground="#ccc"/>
                        <TextBlock Text="Graph &amp; Axis" Style="{StaticResource MaterialDesignSubtitle1TextBlock}" Foreground="#ccc"/>
                    </StackPanel>
                </TabItem.Header>
                <UniformGrid Columns="2" Margin="0" Background="#fcfcfc">
                    <StackPanel Orientation="Vertical" Margin="10">
                        <!--Graph Settings-->
                        <StackPanel Orientation="Horizontal">
                            <materialDesign:PackIcon Kind="ChartScatterPlotHexbin" Width="28" Height="28" Foreground="{DynamicResource SecondaryHueMidBrush}" VerticalAlignment="Center"/>
                            <TextBlock Text="Graph Settings" Style="{StaticResource MaterialDesignHeadline6TextBlock}" Foreground="{DynamicResource SecondaryHueMidBrush}" FontWeight="Light" />
                        </StackPanel>
                        <!--Appearance-->
                        <TextBlock Text="Appearance" Style="{StaticResource MaterialDesignSubtitle1TextBlock}" />
                        <TextBox x:Name="defaultFont" Style="{StaticResource MaterialDesignFloatingHintTextBox}" Text="{Binding Source={x:Static properties:Settings.Default}, Path=defaultFont, Mode=TwoWay}" >
                            <materialDesign:HintAssist.Hint>Default Font</materialDesign:HintAssist.Hint>
                        </TextBox>
                        <TextBox x:Name="lineThickness" Style="{StaticResource MaterialDesignFloatingHintTextBox}" Text="{Binding Source={x:Static properties:Settings.Default}, Path=lineThickness, Mode=TwoWay}">
                            <materialDesign:HintAssist.Hint>Line Thickness</materialDesign:HintAssist.Hint>
                        </TextBox>
                        <TextBox x:Name="markerSize" Style="{StaticResource MaterialDesignFloatingHintTextBox}" Text="{Binding Source={x:Static properties:Settings.Default}, Path=markerSize, Mode=TwoWay}">
                            <materialDesign:HintAssist.Hint>Marker Size</materialDesign:HintAssist.Hint>
                        </TextBox>
                        <TextBox x:Name="fontSize" Style="{StaticResource MaterialDesignFloatingHintTextBox}" Text="{Binding Source={x:Static properties:Settings.Default}, Path=defaultFontSize, Mode=TwoWay}" >
                            <materialDesign:HintAssist.Hint>Font Size</materialDesign:HintAssist.Hint>
                        </TextBox>
                        <Grid Margin="0 10">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="1*"/>
                                <ColumnDefinition Width="1*"/>
                            </Grid.ColumnDefinitions>
                            <TextBlock Style="{StaticResource MaterialDesignBody2TextBlock}" Text="Show Plot Area Border" />
                            <ToggleButton Style="{StaticResource MaterialDesignSwitchAccentToggleButton}" Grid.Column="1" x:Name="showBox" IsChecked="{Binding Source={x:Static properties:Settings.Default}, Path=showBox, Mode=TwoWay}"/>
                        </Grid>
                        <TextBox x:Name="padding" Style="{StaticResource MaterialDesignFloatingHintTextBox}" Text="{Binding Source={x:Static properties:Settings.Default}, Path=plotPadding, Mode=TwoWay}" >
                            <materialDesign:HintAssist.Hint>Plot Area Padding</materialDesign:HintAssist.Hint>
                        </TextBox>
                        <Grid Margin="0 10">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="1*"/>
                                <ColumnDefinition Width="1*"/>
                            </Grid.ColumnDefinitions>
                            <TextBlock Style="{StaticResource MaterialDesignBody2TextBlock}" Text="Show Plot Title" />
                            <ToggleButton Style="{StaticResource MaterialDesignSwitchAccentToggleButton}" Grid.Column="1" x:Name="plotTitle" IsChecked="{Binding Source={x:Static properties:Settings.Default}, Path=plotTitle, Mode=TwoWay}"/>
                        </Grid>
                        <TextBlock Text="UI Settings" Style="{StaticResource MaterialDesignHeadline6TextBlock}" Foreground="{DynamicResource SecondaryHueMidBrush}" FontWeight="Light" Margin="0 10 0 0" />
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="1*"/>
                                <ColumnDefinition Width="1*"/>
                            </Grid.ColumnDefinitions>
                            <TextBlock Style="{StaticResource MaterialDesignBody2TextBlock}" TextWrapping="Wrap">
                                Force UserInterface 
                                to be in English
                                <LineBreak />
                                <Run FontSize="9">Restart required!</Run>
                            </TextBlock>
                            <ToggleButton Style="{StaticResource MaterialDesignSwitchAccentToggleButton}" Grid.Column="1" x:Name="forceEn" IsChecked="{Binding Source={x:Static properties:Settings.Default}, Path=forceEn, Mode=TwoWay}"/>
                        </Grid>
                    </StackPanel>
                    <StackPanel Orientation="Vertical" Margin="10">
                        <!--Axis Settings-->
                        <TextBlock Text="Axis Settings" Style="{StaticResource MaterialDesignHeadline6TextBlock}" Foreground="{DynamicResource SecondaryHueMidBrush}" FontWeight="Light"/>
                        <TextBlock Style="{StaticResource MaterialDesignSubtitle1TextBlock}" Text=""></TextBlock>
                        <Grid Margin="0 10">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="1*"/>
                                <ColumnDefinition Width="1*"/>
                            </Grid.ColumnDefinitions>
                            <TextBlock Style="{StaticResource MaterialDesignBody2TextBlock}" Text="Show X Axis"  Grid.Column="0"/>

                            <ToggleButton Style="{StaticResource MaterialDesignSwitchAccentToggleButton}" x:Name="xAxis" IsChecked="{Binding Source={x:Static properties:Settings.Default}, Path=xAxis, Mode=TwoWay}" Grid.Column="1"/>
                        </Grid>
                        <Grid Margin="0 10">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="1*"/>
                                <ColumnDefinition Width="1*"/>
                            </Grid.ColumnDefinitions>
                            <StackPanel>
                                <TextBlock Style="{StaticResource MaterialDesignBody2TextBlock}" Text="Autoscale X"/>
                                <TextBlock FontSize="10">(ignores min/max)</TextBlock>
                            </StackPanel>
                            <ToggleButton Style="{StaticResource MaterialDesignSwitchAccentToggleButton}" x:Name="autoscaleX" 
                                  IsChecked="{Binding Source={x:Static properties:Settings.Default}, Path=autoscaleX, Mode=TwoWay}" 
                                  Grid.Column="1"/>
                        </Grid>
                        <Grid Margin="0 10">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="1*"/>
                                <ColumnDefinition Width="1*"/>
                            </Grid.ColumnDefinitions>
                            <StackPanel>
                                <TextBlock Style="{StaticResource MaterialDesignBody2TextBlock}" Text="Autoscale Y"/>
                                <TextBlock FontSize="10">(ignores min/max)</TextBlock>
                            </StackPanel>
                            <ToggleButton Style="{StaticResource MaterialDesignSwitchAccentToggleButton}"  
                                          x:Name="autoscaleY" IsChecked="{Binding Source={x:Static properties:Settings.Default}, Path=autoscaleY, Mode=TwoWay}" 
                                          Grid.Column="1"/>
                        </Grid>

                        <TextBlock Style="{StaticResource MaterialDesignBody2TextBlock}" Text="X-Axis Scale" Margin="0 15 0 0"  />
                        <Grid>
                            <Grid.Style>
                                <Style TargetType="{x:Type Grid}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Path=(properties:Settings.Default).autoscaleX}" Value="True">
                                            <Setter Property="IsEnabled" Value="False" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Grid.Style>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="1*"/>
                                <ColumnDefinition Width="1*"/>
                            </Grid.ColumnDefinitions>
                            <TextBox Grid.Column="0" x:Name="minX" Style="{StaticResource MaterialDesignFloatingHintTextBox}" Text="{Binding Source={x:Static properties:Settings.Default}, Path=minX, Mode=TwoWay}">
                                <materialDesign:HintAssist.Hint>X-Axis Minimum</materialDesign:HintAssist.Hint>
                            </TextBox>
                            <TextBox Grid.Column="1" x:Name="maxX" Style="{StaticResource MaterialDesignFloatingHintTextBox}" Text="{Binding Source={x:Static properties:Settings.Default}, Path=maxX, Mode=TwoWay}">
                                <materialDesign:HintAssist.Hint>X-Axis Maximum</materialDesign:HintAssist.Hint>
                            </TextBox>
                        </Grid>
                        <TextBlock Style="{StaticResource MaterialDesignBody2TextBlock}" Text="Y-Axis Scale" Margin="0 15 0 0" />
                        <Grid>
                            <Grid.Style>
                                <Style TargetType="{x:Type Grid}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Path=(properties:Settings.Default).autoscaleY}" Value="True">
                                            <Setter Property="IsEnabled" Value="False" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Grid.Style>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="1*"/>
                                <ColumnDefinition Width="1*"/>
                            </Grid.ColumnDefinitions>
                            <TextBox x:Name="minY" Style="{StaticResource MaterialDesignFloatingHintTextBox}" Text="{Binding Source={x:Static properties:Settings.Default}, Path=minY, Mode=TwoWay}" >
                                <materialDesign:HintAssist.Hint>Y-Axis Minimum</materialDesign:HintAssist.Hint>
                            </TextBox>
                            <TextBox x:Name="maxY" Grid.Column="1" Style="{StaticResource MaterialDesignFloatingHintTextBox}" Text="{Binding Source={x:Static properties:Settings.Default}, Path=maxY, Mode=TwoWay}">
                                <materialDesign:HintAssist.Hint>Y-Axis Maximum</materialDesign:HintAssist.Hint>
                            </TextBox>
                        </Grid>
                        <Grid Margin="0 10">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="1*"/>
                                <ColumnDefinition Width="1*"/>
                            </Grid.ColumnDefinitions>
                            <TextBlock Style="{StaticResource MaterialDesignBody2TextBlock}" Text="Y-Axis Title is Horizontal"/>
                            <ToggleButton Style="{StaticResource MaterialDesignSwitchAccentToggleButton}"  x:Name="rotateTitle" 
                                          IsChecked="{Binding Source={x:Static properties:Settings.Default}, Path=rotateTitle, Mode=TwoWay}" 
                                          Grid.Column="1"/>
                        </Grid>
                        <Grid Margin="0 10">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="1*"/>
                                <ColumnDefinition Width="1*"/>
                            </Grid.ColumnDefinitions>
                            <TextBlock Style="{StaticResource MaterialDesignBody2TextBlock}" Text="Show Zero"/>
                            <ToggleButton Style="{StaticResource MaterialDesignSwitchAccentToggleButton}"  x:Name="zero" IsChecked="{Binding Source={x:Static properties:Settings.Default}, Path=zero, Mode=TwoWay}" Grid.Column="1"/>
                        </Grid>
                        <TextBlock Style="{StaticResource MaterialDesignBody2TextBlock}" Text="Set Axis Title" />
                        <TextBox x:Name="titleFormat" Style="{StaticResource MaterialDesignFloatingHintTextBox}" Text="{Binding Source={x:Static properties:Settings.Default}, Path=titleFormat, Mode=TwoWay}">
                            <materialDesign:HintAssist.Hint>Axis Title Format ({0} = Title, {1} = Unit)</materialDesign:HintAssist.Hint>
                        </TextBox>
                    </StackPanel>
                </UniformGrid>
            </TabItem>
            <TabItem>
                <TabItem.Header>
                    <StackPanel Orientation="Horizontal" >
                        <materialDesign:PackIcon Kind="ImportExport" Width="24" Height="24"  Margin="0 0 7 0" Foreground="#ccc"/>
                        <TextBlock Text="Import &amp; Export" Style="{StaticResource MaterialDesignSubtitle1TextBlock}" Foreground="#ccc"/>
                    </StackPanel>
                </TabItem.Header>
                <UniformGrid Columns="2" Margin="0" Background="#fcfcfc">

                    <StackPanel Grid.Column="0" Orientation="Vertical"  Margin="10">
                        <StackPanel Orientation="Horizontal">
                            <materialDesign:PackIcon Kind="ImportExport" Width="28" Height="28" Foreground="{DynamicResource SecondaryHueMidBrush}" VerticalAlignment="Center"/>
                            <TextBlock Text="Import Settings" Style="{StaticResource MaterialDesignHeadline6TextBlock}" Foreground="{DynamicResource SecondaryHueMidBrush}" FontWeight="Light" />
                        </StackPanel>
                        <TextBlock Style="{StaticResource MaterialDesignSubtitle1TextBlock}" Text=""></TextBlock>
                        <TextBlock Style="{StaticResource MaterialDesignBody2TextBlock}" Text="Default Import Directory"/>
                        <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                            <TextBox x:Name="importPath" Style="{StaticResource MaterialDesignFloatingHintTextBox}" 
                                 Text="{Binding Source={x:Static properties:Settings.Default}, Path=importPath, Mode=TwoWay}"
                                 Width="250">
                                <materialDesign:HintAssist.Hint>Folder Path</materialDesign:HintAssist.Hint>
                            </TextBox>
                            <Button x:Name="folderImportBtn" Content="Search" Click="FolderBtn_Click" Margin="10 0" Tag="import"/>
                        </StackPanel>
                        <Grid Margin="0 10">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="1*"/>
                                <RowDefinition Height="1*"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="1*"/>
                                <ColumnDefinition Width="1*"/>
                            </Grid.ColumnDefinitions>

                            <TextBlock Style="{StaticResource MaterialDesignBody2TextBlock}" TextWrapping="Wrap" Grid.RowSpan="2">
                                Use Same Folder for Import &amp; Export
                                <LineBreak/>
                                <Run FontSize="10" Foreground="{DynamicResource SecondaryHueMidBrush}">Ignores Export Directory Setting</Run>
                            </TextBlock>
                            <ToggleButton Style="{StaticResource MaterialDesignSwitchAccentToggleButton}" Grid.Column="1" x:Name="useImportExportPath" IsChecked="{Binding Source={x:Static properties:Settings.Default}, Path=useImportExportPath, Mode=TwoWay}" Grid.RowSpan="2"/>
                        </Grid>
                    </StackPanel>
                    <StackPanel Grid.Column="1" Orientation="Vertical" Margin="10">
                        <TextBlock Text="Export Settings" Style="{StaticResource MaterialDesignHeadline6TextBlock}" Foreground="{DynamicResource SecondaryHueMidBrush}" FontWeight="Light"/>
                        <TextBlock Style="{StaticResource MaterialDesignSubtitle1TextBlock}" Text=""></TextBlock>
                        <!--Export Settings-->
                        <TextBlock Style="{StaticResource MaterialDesignBody2TextBlock}" Text="Default Export Directory"/>
                        <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                            <StackPanel.Style>
                                <Style TargetType="{x:Type StackPanel}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Path=(properties:Settings.Default).useImportExportPath}" Value="True">
                                            <Setter Property="IsEnabled" Value="False" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </StackPanel.Style>
                            <TextBox x:Name="savePath" Style="{StaticResource MaterialDesignFloatingHintTextBox}" 
                                 Text="{Binding Source={x:Static properties:Settings.Default}, Path=savePath, Mode=TwoWay}"
                                 Width="250">
                                <materialDesign:HintAssist.Hint>Folder Path</materialDesign:HintAssist.Hint>
                            </TextBox>
                            <Button x:Name="folderBtn" Content="Search" Click="FolderBtn_Click" Margin="10 0" Tag="save"/>
                        </StackPanel>
                        <TextBlock Style="{StaticResource MaterialDesignBody2TextBlock}" Text="Image Size" Margin="0 25 0 0"/>
                        <TextBox x:Name="pngWidth" Style="{StaticResource MaterialDesignFloatingHintTextBox}" Text="{Binding Source={x:Static properties:Settings.Default}, Path=pngWidth, Mode=TwoWay}">
                            <materialDesign:HintAssist.Hint>Width (px)</materialDesign:HintAssist.Hint>
                        </TextBox>
                        <TextBox x:Name="pngHeight" Style="{StaticResource MaterialDesignFloatingHintTextBox}" Text="{Binding Source={x:Static properties:Settings.Default}, Path=pngHeight, Mode=TwoWay}" Margin="0,0.5">
                            <materialDesign:HintAssist.Hint>Height (px)</materialDesign:HintAssist.Hint>
                        </TextBox>
                        <TextBox x:Name="pngRes" Style="{StaticResource MaterialDesignFloatingHintTextBox}" Text="{Binding Source={x:Static properties:Settings.Default}, Path=pngRes, Mode=TwoWay}">
                            <materialDesign:HintAssist.Hint>Resolution</materialDesign:HintAssist.Hint>
                        </TextBox>
                        <Grid Margin="0 10">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="1*"/>
                                <ColumnDefinition Width="1*"/>
                            </Grid.ColumnDefinitions>
                            <TextBlock Style="{StaticResource MaterialDesignBody2TextBlock}" TextWrapping="Wrap">
                                Use Background Color (PNG)
                                <LineBreak />
                                <TextBlock FontSize="9" TextWrapping="Wrap">If this is set, a white background will be added to exported graphs.</TextBlock>
                            </TextBlock>
                            <ToggleButton Style="{StaticResource MaterialDesignSwitchAccentToggleButton}" Grid.Column="1" x:Name="backgroundColor" IsChecked="{Binding Source={x:Static properties:Settings.Default}, Path=backgroundColor, Mode=TwoWay}"/>

                        </Grid>
                    </StackPanel>
                </UniformGrid>
            </TabItem>
            <TabItem>
                <TabItem.Header>
                    <StackPanel Orientation="Horizontal">
                        <materialDesign:PackIcon Kind="FileTableOutline" Width="24" Height="24" Margin="0 0 7 0" Foreground="#ccc"/>
                        <TextBlock Text="Data" Style="{StaticResource MaterialDesignSubtitle1TextBlock}" Foreground="#ccc"/>
                    </StackPanel>
                </TabItem.Header>
                <UniformGrid Columns="2" Margin="0" Background="#fcfcfc">
                    <StackPanel  Margin="10">
                        <!--Data Settings-->
                        <StackPanel Orientation="Horizontal">
                            <materialDesign:PackIcon Kind="FileTableOutline" Width="28" Height="28" VerticalAlignment="Center" Foreground="{DynamicResource SecondaryHueMidBrush}"/>
                            <TextBlock Text="Data Settings" Style="{StaticResource MaterialDesignHeadline6TextBlock}" Foreground="{DynamicResource SecondaryHueMidBrush}" FontWeight="Light"/>
                        </StackPanel>
                        <TextBlock Style="{StaticResource MaterialDesignSubtitle1TextBlock}" Text="Marker Settings" />
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="1*"/>
                                <ColumnDefinition Width="1*"/>
                            </Grid.ColumnDefinitions>

                            <TextBlock Style="{StaticResource MaterialDesignBody2TextBlock}"  Text="Exp. Marker-Type"/>
                            <ComboBox x:Name="markerType" Grid.Column="2" Height="30" SelectedValue="{Binding Source={x:Static properties:Settings.Default}, Path=markerType, Mode=TwoWay}" SelectedValuePath="Content">
                                <ComboBoxItem>None</ComboBoxItem>
                                <ComboBoxItem>Circle</ComboBoxItem>
                                <ComboBoxItem>Square</ComboBoxItem>
                                <ComboBoxItem>Diamond</ComboBoxItem>
                                <ComboBoxItem>Triangle</ComboBoxItem>
                                <ComboBoxItem>Cross</ComboBoxItem>
                                <ComboBoxItem>Plus</ComboBoxItem>
                                <ComboBoxItem>Star</ComboBoxItem>
                            </ComboBox>
                        </Grid>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="1*"/>
                                <ColumnDefinition Width="1*"/>
                            </Grid.ColumnDefinitions>

                            <TextBlock Style="{StaticResource MaterialDesignBody2TextBlock}"  Text="Sim. Marker-Type" />
                            <ComboBox x:Name="simMarkerType" Grid.Column="1" Height="30" SelectedValue="{Binding Source={x:Static properties:Settings.Default}, Path=simMarkerType, Mode=TwoWay}" SelectedValuePath="Content">
                                <ComboBoxItem>None</ComboBoxItem>
                                <ComboBoxItem>Circle</ComboBoxItem>
                                <ComboBoxItem>Square</ComboBoxItem>
                                <ComboBoxItem>Diamond</ComboBoxItem>
                                <ComboBoxItem>Triangle</ComboBoxItem>
                                <ComboBoxItem>Cross</ComboBoxItem>
                                <ComboBoxItem>Plus</ComboBoxItem>
                                <ComboBoxItem>Star</ComboBoxItem>
                            </ComboBox>
                        </Grid>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="1*"/>
                                <ColumnDefinition Width="1*"/>
                            </Grid.ColumnDefinitions>

                            <TextBlock Style="{StaticResource MaterialDesignBody2TextBlock}"  Text="Comparison Marker" />
                            <ComboBox x:Name="comMarkerType" Grid.Column="1" Height="30" SelectedValue="{Binding Source={x:Static properties:Settings.Default}, Path=comMarkerType, Mode=TwoWay}" SelectedValuePath="Content">
                                <ComboBoxItem>None</ComboBoxItem>
                                <ComboBoxItem>Circle</ComboBoxItem>
                                <ComboBoxItem>Square</ComboBoxItem>
                                <ComboBoxItem>Diamond</ComboBoxItem>
                                <ComboBoxItem>Triangle</ComboBoxItem>
                                <ComboBoxItem>Cross</ComboBoxItem>
                                <ComboBoxItem>Plus</ComboBoxItem>
                                <ComboBoxItem>Star</ComboBoxItem>
                            </ComboBox>
                        </Grid>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="1*"/>
                                <ColumnDefinition Width="1*"/>
                            </Grid.ColumnDefinitions>

                            <TextBlock Style="{StaticResource MaterialDesignBody2TextBlock}">
                                Do not show Marker
                                <LineBreak/>
                                 <Run FontSize="10">
                                     e.g. C,O,N1,N2
                                 </Run>
                            </TextBlock>
                            <TextBox x:Name="dontMark" Grid.Column="1" Style="{StaticResource MaterialDesignFloatingHintTextBox}" Text="{Binding Source={x:Static properties:Settings.Default}, Path=dontMark, Mode=TwoWay}">
                                <materialDesign:HintAssist.Hint>Separate /w comma
                                </materialDesign:HintAssist.Hint>
                            </TextBox>
                        </Grid>
                    </StackPanel>
                    <StackPanel>
                        <Grid Margin="0 50 0 10">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="1*"/>
                                <RowDefinition Height="1*"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="1*"/>
                                <ColumnDefinition Width="1*"/>
                            </Grid.ColumnDefinitions>

                            <TextBlock Style="{StaticResource MaterialDesignBody2TextBlock}" TextWrapping="Wrap" Grid.RowSpan="2">
                                Ignore Disorder
                                <LineBreak/>
                                <Run FontSize="10" Foreground="{DynamicResource SecondaryHueMidBrush}">Ignores all disorderd molecule parts by checking _atom_site_disorder_group for a value of 2.</Run>
                            </TextBlock>
                            <ToggleButton Style="{StaticResource MaterialDesignSwitchAccentToggleButton}" Grid.Column="1" x:Name="ignoreDisorder" IsChecked="{Binding Source={x:Static properties:Settings.Default}, Path=IgnoreDisorder, Mode=TwoWay}" Grid.RowSpan="2"/>
                        </Grid>
                        <Grid Margin="0 10">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="1*"/>
                                <RowDefinition Height="1*"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="1*"/>
                                <ColumnDefinition Width="1*"/>
                            </Grid.ColumnDefinitions>

                            <TextBlock Style="{StaticResource MaterialDesignBody2TextBlock}" TextWrapping="Wrap" Grid.RowSpan="2">
                                Use Extended Metal Defintion
                                <LineBreak/>
                                <Run FontSize="10" Foreground="{DynamicResource SecondaryHueMidBrush}">Extended Metal Defintion adds more Elements (like Phosphorus) to Metal-Definion. Turn off if analyzing special kinds of Hetero-Macrocycles.</Run>
                            </TextBlock>
                            <ToggleButton Style="{StaticResource MaterialDesignSwitchAccentToggleButton}" Grid.Column="1" x:Name="extendMetals" IsChecked="{Binding Source={x:Static properties:Settings.Default}, Path=ExtendMetalDefinition, Mode=TwoWay}" Grid.RowSpan="2"/>
                        </Grid>
                        <Grid Margin="0 10">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="1*"/>
                                <RowDefinition Height="1*"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="1*"/>
                                <ColumnDefinition Width="1*"/>
                            </Grid.ColumnDefinitions>

                            <TextBlock Style="{StaticResource MaterialDesignBody2TextBlock}" TextWrapping="Wrap" Grid.RowSpan="2">
                                Show Type
                                <LineBreak/>
                                <Run FontSize="10">Shows the Atoms Type in Data Table</Run>
                            </TextBlock>
                            <ToggleButton Style="{StaticResource MaterialDesignSwitchAccentToggleButton}" Grid.Column="1" x:Name="showType" IsChecked="{Binding Source={x:Static properties:Settings.Default}, Path=DisplayTypeColumn, Mode=TwoWay}" Grid.RowSpan="2"/>
                        </Grid>
                        <Grid Margin="0 10">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="1*"/>
                                <RowDefinition Height="1*"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="1*"/>
                                <ColumnDefinition Width="1*"/>
                            </Grid.ColumnDefinitions>

                            <TextBlock Style="{StaticResource MaterialDesignBody2TextBlock}" TextWrapping="Wrap" Grid.RowSpan="2">
                                Mark non Macrocyclic Atoms
                                <LineBreak/>
                                <Run FontSize="10" Foreground="{DynamicResource SecondaryHueMidBrush}">Marks all Atoms and Bonds that are not belonging to the cyclic core with lower opacity. Helps to see whats going on some times. Click Detect or Center to see the Effect</Run>
                            </TextBlock>
                            <ToggleButton Style="{StaticResource MaterialDesignSwitchAccentToggleButton}" Grid.Column="1" x:Name="paintNonCyclic" IsChecked="{Binding Source={x:Static properties:Settings.Default}, Path=PaintNonMacrocyclicAtoms, Mode=TwoWay}" Grid.RowSpan="2"/>
                        </Grid>
                        <Grid Margin="0 10">
                            <Grid.Style>
                                <Style TargetType="{x:Type Grid}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Path=(properties:Settings.Default).PaintNonMacrocyclicAtoms}" Value="False">
                                            <Setter Property="IsEnabled" Value="False" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Grid.Style>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="1*"/>
                                <RowDefinition Height="1*"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="1*"/>
                                <ColumnDefinition Width="1*"/>
                            </Grid.ColumnDefinitions>

                            <TextBlock Style="{StaticResource MaterialDesignBody2TextBlock}" TextWrapping="Wrap" Grid.RowSpan="2">
                                Strength of Effect
                                <LineBreak/>
                                <Run FontSize="10">Defines the strength of the opacity effect. Value between 0 and 100%.</Run>
                            </TextBlock>
                            <Slider VerticalAlignment="Bottom" Grid.Column="1" Minimum="0" Maximum="100" Style="{StaticResource MaterialDesignDiscreteSlider}"  Value="{Binding Source={x:Static properties:Settings.Default}, Path=StrengthNonMacrocyclicAtoms, Mode=TwoWay}" Width="180"/>
                        </Grid>
                    </StackPanel>
                </UniformGrid>
            </TabItem>
            <TabItem>
                <TabItem.Header>
                    <StackPanel Orientation="Horizontal">
                        <materialDesign:PackIcon Kind="ColorLens" Width="24" Height="24" Margin="0 0 7 0" Foreground="#ccc"/>
                        <TextBlock Text="Color" Style="{StaticResource MaterialDesignSubtitle1TextBlock}" Foreground="#ccc"/>
                    </StackPanel>
                </TabItem.Header>
                <UniformGrid Columns="1" Margin="0" Background="#fcfcfc">
                    <StackPanel Margin="10">
                        <!--Color Settings-->
                        <StackPanel Orientation="Horizontal">
                            <materialDesign:PackIcon Kind="ColorLens" Width="30" Height="30" Foreground="{DynamicResource SecondaryHueMidBrush}" VerticalAlignment="Center"/>
                            <TextBlock Text="Color Settings" Style="{StaticResource MaterialDesignHeadline6TextBlock}" Foreground="{DynamicResource SecondaryHueMidBrush}" FontWeight="Light"/>
                        </StackPanel>
                        <TextBlock Style="{StaticResource MaterialDesignSubtitle1TextBlock}" Text=""></TextBlock>
                        <Grid>
                            <Grid.Style>
                                <Style TargetType="{x:Type Grid}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Path=(properties:Settings.Default).singleColor}" Value="True">
                                            <Setter Property="IsEnabled" Value="False" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Grid.Style>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="1*"/>
                                <ColumnDefinition Width="1*"/>
                            </Grid.ColumnDefinitions>
                            <TextBlock Style="{StaticResource MaterialDesignBody2TextBlock}">
                                Bond Color
                                <LineBreak />
                                <Run FontSize="9">The color used for Bonds if Palette Mode is disabled.</Run>
                            </TextBlock>
                            <TextBox TextChanged="Color_TextChanged" x:Name="color1" Grid.Column="1" Style="{StaticResource MaterialDesignFloatingHintTextBox}" 
                                     Text="{Binding Source={x:Static properties:Settings.Default}, Path=color1, Mode=TwoWay}" >
                                <materialDesign:HintAssist.Hint>Bond Color (non Palette Mode)</materialDesign:HintAssist.Hint>
                            </TextBox>
                        </Grid>

                        <Grid Margin="0 10">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="1*"/>
                                <ColumnDefinition Width="1*"/>
                            </Grid.ColumnDefinitions>
                            <TextBlock Style="{StaticResource MaterialDesignBody2TextBlock}">
                                Use Color Palette
                                <LineBreak />
                                <Run FontSize="9">Uses single color for each series.</Run>
                            </TextBlock>
                            <ToggleButton Style="{StaticResource MaterialDesignSwitchAccentToggleButton}" x:Name="singleColor" 
                                          IsChecked="{Binding Source={x:Static properties:Settings.Default}, Path=singleColor, Mode=TwoWay}" 
                                          Grid.Column="1"/>
                        </Grid>
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="42*"/>
                            </Grid.RowDefinitions>
                            <Grid.Style>
                                <Style TargetType="{x:Type Grid}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Path=(properties:Settings.Default).singleColor}" Value="False">
                                            <Setter Property="IsEnabled" Value="False" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Grid.Style>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="1*"/>
                                <ColumnDefinition Width="1*"/>
                            </Grid.ColumnDefinitions>
                            <TextBlock Style="{StaticResource MaterialDesignBody2TextBlock}" Grid.RowSpan="2">
                                Color Palette
                                <LineBreak />
                                <Run FontSize="9">Select a Color Palette from the Dropdown.</Run>
                                <LineBreak />
                                <Run FontSize="9">The Preview shows some colors of the Palette. Other Colors will be interpolated upon need.</Run>
                            </TextBlock>
                            <ComboBox x:Name="palette" Grid.Column="1" SelectedValue="{Binding Source={x:Static properties:Settings.Default}, Path=ColorPalette, Mode=TwoWay}" SelectedValuePath="Title" ItemsSource="{Binding PaletteList}" Grid.Row="1">
                                <ComboBox.ItemTemplate>
                                    <DataTemplate>
                                        <UniformGrid Columns="2">
                                            <TextBlock Text="{Binding Title}" Style="{StaticResource MaterialDesignBody2TextBlock}" FontSize="16" FontWeight="Light" VerticalAlignment="Center"/>
                                            <ItemsControl ItemsSource="{Binding Brushes}">
                                                <ItemsControl.ItemsPanel>
                                                    <ItemsPanelTemplate>
                                                        <WrapPanel IsItemsHost="True"/>
                                                    </ItemsPanelTemplate>
                                                </ItemsControl.ItemsPanel>
                                                <ItemsControl.ItemTemplate>
                                                    <DataTemplate>
                                                        <Rectangle Fill="{Binding}" Width="20" Height="20" Margin="5"/>
                                                    </DataTemplate>
                                                </ItemsControl.ItemTemplate>
                                            </ItemsControl>
                                        </UniformGrid>
                                    </DataTemplate>
                                </ComboBox.ItemTemplate>
                            </ComboBox>
                        </Grid>
                    </StackPanel>
                </UniformGrid>
            </TabItem>
        </TabControl>
    </Grid>
</Window>
